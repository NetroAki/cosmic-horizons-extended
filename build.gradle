plugins {
    id 'java'
    id 'dev.architectury.loom' version '1.5-SNAPSHOT' apply false
    id 'com.diffplug.spotless' version '6.25.0' apply false
}

// Root does not apply Forge/Mixin; mixin applied in :forge if needed

group = 'com.netroaki'
version = '0.1.0'

def isRoot = project == rootProject

ext {
    mc_version = '1.20.1'
    gtm_version = '7.2.0-SNAPSHOT'
}

// Architectury plugin not required; Loom applied per-module

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
    withSourcesJar()
}

repositories {
    mavenCentral()
    maven { url = 'https://maven.architectury.dev/' }
    maven {
        name = 'Fabric'
        url = 'https://maven.fabricmc.net/'
    }
    maven {
        name = 'Forge'
        url = 'https://maven.minecraftforge.net'
    }
    maven {
        name = 'Modrinth'
        url = 'https://api.modrinth.com/maven'
    }
    maven {
        name = 'CurseMaven'
        url = 'https://cursemaven.com'
    }
    maven {
        name = 'BlameJared'
        url = 'https://maven.blamejared.com'
    }
    maven {
        name = 'TeamResourceful'
        url = 'https://maven.teamresourceful.com/repository/maven-releases/'
    }
    maven {
        name = 'GTCEu Maven'
        url = 'https://maven.gtceu.com'
        content {
            includeGroup 'com.gregtechceu.gtceu'
        }
    }
    maven {
        name = 'JitPack'
        url = 'https://jitpack.io'
    }
    maven {
        name = 'Sponge'
        url = 'https://repo.spongepowered.org/repository/maven-public/'
    }
    maven {
        name = 'firstdarkdev'
        url = 'https://maven.firstdarkdev.xyz/snapshots'
    }
    maven {
        name = 'Architectury'
        url = 'https://maven.architectury.dev/'
    }
}

// Root acts as aggregator; Forge runs live in :forge

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

allprojects {
    apply plugin: 'com.diffplug.spotless'

    spotless {
        java {
            target 'src/**/*.java'
            importOrder()
            removeUnusedImports()
            googleJavaFormat('1.17.0').reflowLongStrings()
        }
        format('json') {
            target fileTree(projectDir) {
                include '**/*.json', '**/*.mcmeta'
                exclude '**/build/**', '**/.gradle/**', '**/run/**', '**/out/**', '**/bin/**'
            }
            prettier().config(['parser': 'json'])
        }
        format('json5') {
            target fileTree(projectDir) {
                include '**/*.json5'
                exclude '**/build/**', '**/.gradle/**', '**/run/**', '**/out/**', '**/bin/**'
            }
            prettier().config(['parser': 'json5'])
        }
        format('markdown') {
            target fileTree(projectDir) {
                include '**/*.md'
                exclude '**/build/**', '**/.gradle/**', '**/out/**'
            }
            prettier().config(['parser': 'markdown'])
        }
    }

    tasks.named('check') {
        dependsOn 'spotlessCheck'
    }
}
