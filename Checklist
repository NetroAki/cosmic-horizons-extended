Cosmic Horizons Extended (CHEX)
Full Forge-Only Implementation Plan & Design Notes
MC 1.20.1 • Java 17 • Forge • No Architectury • No KubeJS • No FTB Quests

\================================================================================
0\) MOD GOAL & VISION
=====================

CHEX is the progression backbone for a GregTech: New Horizons–style modpack built on Cosmic Horizons/Unbound.
It provides:
• New planets/dimensions (CHEX-exclusive) with distinct worldgen signatures.
• At least 5 unique biomes per planet.
• A rocket-tiered space arc (T1 → T10). Each new world provides the ores/fuels required for the next rocket tier.
• Pure Forge implementation: custom density functions, worldgen features, biome modifiers, capabilities, commands.
• No external scripting stacks. All gating/enforcement lives in CHEX code and datapack resources.
• Stability first: registries wired correctly (no dangling keys), safe optional integration with GTCEu/others.

\================================================================================

1. PLANETS & DIMENSIONS
   \================================================================================
   CHEX-exclusive dimensions:

* halo\_ringworld (ringworld megastructure, band-limited, curved shader)
* torus\_world (periodic X+Z, seamless donut world)
* pandora (floating-stone everywhere, bioluminescence)
* arrakis (dunes + sandworm tunnels)
* aqua\_mundus (ocean world, lowered seabed, abyssal trenches)
* inferno\_prime (volcanic, nether-like caves, lava seas)
* crystalis (prism ridges, geodes, shimmering deserts)
* exotica (surreal, chroma steppes, rare-earths)
* hollow\_world (mega-cave world with glow ecosystems)

Cosmic Horizons/Unbound planets (discovered at runtime):

* cosmos\:earth\_moon
* cosmos\:mercury\_wasteland
* cosmos\:venuslands
* cosmos\:marslands
* cosmos\:jupiterlands
* cosmos\:europa\_lands
* cosmos\:saturn\_lands
* cosmos\:uranus\_lands
* cosmos\:neptune\_lands
* cosmos\:plutowastelands
* cosmos\:alpha\_system
* cosmos\:b\_1400\_centauri
* cosmos\:j\_1407blands
* cosmos\:j\_1900
* cosmos\:glacio\_lands
* cosmos\:gaia\_bh\_1
* cosmos\:solar\_system

\================================================================================
2\) ORE PROGRESSION (GTNH-style)
================================

Principle: Each world yields the ores needed for the NEXT rocket tier.

Tier Map:
T1 → T2 : Early/Moon → Bauxite/Ilmenite, Lead/Silver, Lithium
T2 → T3 : Pandora → Titanium, Vanadium, Lithium
T3 → T4 : Arrakis → Tungsten, Molybdenum, Chromium, Magnesium
T4 → T5 : Aqua Mundus → Platinum, Iridium, Palladium
T5 → T6 : Inferno Prime → Niobium–Tantalum, Uranium, Osmium
T6 → T7 : Crystalis → Beryllium, Fluorite, Ruby/Sapphire
T7 → T8 : Exotica → Rhenium, Scandium, Rare Earths
T8 → T9 : Halo Ringworld → Draconium
T9 → T10: Torus World → Awakened Draconium, Quantum Gems

\================================================================================
3\) ROCKET TIERS, SUITS, FUEL & TRAVEL
======================================

• RocketTier: T1..T10, each with default fuel requirement.
• PlayerTierCapability: tracks rocketTier, syncs to client.
• TravelGraph: JSON-driven map tier → allowed planet IDs.
• Suits I..V: enforce hazards (vacuum, acid, radiation, cryogenic).
• FuelRegistry: tier → fluid + mB, fallback fluids if GTCEu missing.
• LaunchHooks: validate fuel, tier, target planet, cargo.
• DimensionHooks: enforce suit tier, deny or debuff.
• RecipeConditionTier: Forge recipe condition for tier gating.

\================================================================================
4\) DATA & CONFIG SURFACES
==========================

• chex-common.toml → suit mode, fuel policy, accept higher-tier fuel.
• chex-planets.json5 → overrides for planet requirements (tier, suit, hazards).
• chex-travel.json5 → travel graph.
• chex-minerals.json5 → ore distributions per planet.
• fallback\_ores.json5 → CHEX fallback ores when GTCEu absent.
• Datapack assets: dimensions, noise\_settings, biomes, tags, features, placed, biome\_modifiers.

\================================================================================
5\) COMMANDS & NETWORKING
=========================

• /chex getTier \[player]
• /chex setTier <player> <1..10>
• /chex simulateTier <1..10>
• /chex dumpPlanets (console + file)

Networking:
• Sync tier to clients.
• LaunchDenied packets with codes (FUEL\_ID\_MISMATCH, TIER\_TOO\_LOW, SUIT\_TOO\_LOW, etc.).

\================================================================================
6\) CLIENT UX
=============

• Tooltips: show suit tier, rocket tier, fuel requirements.
• Toasts/messages for deny reasons (localized).
• Optional JEI categories for Rocket Assembly / Planet Resources.

\================================================================================
7\) PERFORMANCE & STABILITY
===========================

• No tick loops; only event-based hooks.
• Periodic density + band\_limit are constant-time.
• Null-safe lookups; WARN and skip unknown planet IDs or missing tags.
• Fallback ores and fluids keep pack playable if GTCEu absent.

\================================================================================
8\) QA / ACCEPTANCE TESTS
=========================

• With GTCEu: verify Moon → Pandora → Mars → Aqua → Inferno → Crystalis → Exotica → Ring → Torus progression.
• Without GTCEu: fallback ores generate, fallback fluids work.
• Multiplayer: server-side denial of bypass attempts.
• Config reload: log which require restart vs live reload.

\================================================================================
9\) NEW SYSTEMS – UNIQUE PLANETS
================================

18. Shattered Dyson Swarm (Tier 9)
    • Void dimension with orbital debris and platforms.
    • Structure-only generation (habitats, solar panels, debris fields).
    • Biomes: Habitat Dome, Radiator Panel Plains, Debris Belt, Solar Collector, Control Node.
    • Resources: Fusion fuels (He-3, D-T), exotic alloys, superconductors.
    • Requirements: Tier IX Rocket + Suit IV (vacuum + radiation).

19. Neutron Star Forge (Tier 10)
    • Dimension orbiting a neutron star; extreme gravity and radiation.
    • Curved density pulling terrain inward; indestructible neutronium core.
    • Biomes: Crushed Basalt Plains, Neutronium Crust, Magnetar Peaks, Radiation Flats, Exotic Rift Valleys.
    • Resources: Quantum Crystals, Exotic Matter, Ultimate Fusion Isotopes.
    • Requirements: Tier X Rocket + Suit V (maximum protection).

\================================================================================
10\) PLANET/ORE TABLE (CHEX only)
=================================

Pandora         → Tier 3 : Titanium, Vanadium, Lithium
Arrakis         → Tier 4 : Tungsten, Molybdenum, Chromium, Magnesium
Aqua Mundus     → Tier 5 : Platinum, Iridium, Palladium
Inferno Prime   → Tier 6 : Niobium–Tantalum, Uranium, Osmium
Crystalis       → Tier 7 : Beryllium, Fluorite, Ruby/Sapphire
Exotica         → Tier 8 : Rhenium, Scandium, Rare Earths
Halo Ringworld  → Tier 9 : Draconium
Torus World     → Tier 10: Awakened Draconium, Quantum Gems
Hollow World    → Flexible aux resources

\================================================================================
END OF LIST
===========

\================================================================================
11) RECENT CROSS-PLANET & CLIENT UX UPDATES
===========================================

• Boss controller framework added; bosses report phase to controller.
• Boss core matrix progression data authored (data-driven unlock mapping).
• Suit hazards system implemented (JSON5 config + runtime cache), integrated into Dyson/Neutron Forge hazards.
• Minerals config runtime reload via /chex minerals reload.
• Launch validation enhanced: cargo mass multiplier, fuel quality factor, and destination lock (Sovereign Heart required for Neutron Forge). Localized deny toasts.
• Client tooltips for suits, fuel buckets, and controller; JEI categories for Rocket Assembly and Planet Resources.
• Ambience & soundscape cues wired (launch countdown, suit alarm, Dyson hum, Forge pulse) with subtitles.
• Visual filters per-dimension (fog tint) applied via client event with JSON5 config.

Dependency Decision:
• GTCEu is a hard dependency for CHEX; fallback ore processing is intentionally omitted.
